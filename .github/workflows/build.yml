name: Build and release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
    build:
      runs-on: ubuntu-latest

      strategy:
        matrix:
          platform: 
              - {arch: "arm64", os: "linux", ext: ""}
              - {arch: "amd64", os: "linux", ext: ""}
              - {arch: "amd64", os: "windows", ext: ".exe"}
              - {arch: "arm64", os: "darwin", ext: ""}
              - {arch: "amd64", os: "darwin", ext: ""}

      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up Go 1.23.1
          uses: actions/setup-go@v3
          with:
            go-version: 1.23.1
          id: go

        - name: Install dependencies
          run: go mod download

        - name: Build for ${{ matrix.platform }}
          run: |
            GOOS=${{ matrix.platform.os }} GOARCH=${{ matrix.platform.arch }} go build -o build/fishsim-${{ matrix.platform.os }}-${{ matrix.platform.arch }}${{matrix.platform.ext}} .

            - name: Upload build artifact
            uses: actions/upload-artifact@v3
            with:
              name: fishsim-${{ matrix.platform.os }}-${{ matrix.platform.arch }}
              path: build/fishsim-${{ matrix.platform.os }}-${{ matrix.platform.arch }}
  
    release:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Download build artifacts
          uses: actions/download-artifact@v3
          with:
              path: build

        - name: Create GitHub Release
          uses: actions/create-release@v1
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
              tag_name: ${{ github.sha }}
              release_name: Release ${{ github.sha }}
              draft: false
              prerelease: true

        - name: Upload Release Assets
          run: |
              for file in build/*; do
                  gh release upload ${{ github.sha }} "$file" --clobber
              done
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}